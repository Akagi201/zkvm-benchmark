wasm_go := "./fib_opt.wasm"
wasm_rust := "./fib_bg_opt.wasm"
args := "-k 22 --function zkmain --param ./params --output ./output --wasm"
cli := env_var_or_default("DELPHINUS_CLI", "delphinus-cli")

# build wasm
build:
  GOOS=wasip1 GOARCH=wasm lgo build -gcflags=all=-d=softfloat -o fib.wasm fib.go

# wasm-opt wasm file
opt:
  wasm-opt -Oz -o ./fib_opt.wasm ./fib.wasm

# run with wasi
run-wasi:
  node ../zkwasm-emulator/wasi_exec_node.js {{wasm_go}} /dev/null

# dry run go
dry-run-go:
  RUST_LOG=info {{cli}} {{args}} {{wasm_go}} dry-run

# dry run rust
dry-run-rust:
  RUST_LOG=info {{cli}} {{args}} {{wasm_rust}} dry-run

# setup params
setup:
  rm -rf output
  RUST_LOG=info {{cli}} {{args}} {{wasm_go}} setup

# generate proof
prove:
  RUST_LOG=info {{cli}} {{args}} {{wasm_go}}  single-prove

# verify proof
verify:
  RUST_LOG=info {{cli}} {{args}} {{wasm_go}} single-verify

# clean artifacts
clean:
  rm -rf output params *.wasm *.json *.dat
